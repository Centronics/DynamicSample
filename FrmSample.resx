<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAD8/f7/3u35/9ro+P/b6vn/2ur5/9vq+f/c6fn/3Or5/9vq+f/a6vn/2+r5/9vq+f/a6vn/2+r5/9zp
        +f/c6vn/2+r5/9rq+f/b6vn/2+r5/9rq+f/b6/n/3ev5/5rO6/9qsuv/oNDy/8nf9f/J3/X/yd/1/8nf
        9f/J3/X/yd/1/9no9//D3fb/x931/8fe9f/H3fX/xt31/8jd9f/I3fX/yd71/83i+P/H3vX/x931/8fd
        9f/G3fX/yN31/8jd9f/I3vX/zuP4/8fd9f/H3vX/x931/8bd9f/H3vX/y+T3/0yh5P8qkOP/qtPz/8nf
        9f/J3/X/yd/1/8nf9f/J3/X/yN71/8je9f/J4Pb/yOH1/8ne9v/J3/b/yOD3/8rh9v+62fP/e7fj/8/k
        +P/J3vT/yN72/8je9v/I3vb/yt/2/8Xh9v9srd7/y+P3/8ng9v/I3vb/yN72/8ne9f/T5Pf/crbo/zSU
        5f9psuv/yd/1/8nf9f/J3/X/yd/1/8nf9f/I3vb/yd/2/8nf9v/H2fL/zeP4/9Dm+f/C1fH/zeX2/6TP
        7v87kNn/0ub3/8vf9f/I3vb/yd/1/8nf9v/L4Pb/v9z2/yWD0//O5fj/yeD2/8nf9//O5f3/yeD3/9Pj
        9/9ytuj/NZXm/2O06f/J3/X/yd/1/8nf9f/J3/X/yd/1/8nf9v/L4ff/tszr/yAxof/I4fb/obTk/yw4
        o//Y7v3/ps/v/z6U2v/T5vf/yt/1/8je9v/J3/b/yd/2/8vg9v/A3fX/K4bU/8/l+P/K4ff/yN3z/5Wh
        q//M4Pb/0+X5/3K26P80leb/ZbXq/8nf9f/J3/X/yd/1/8nf9f/J3/X/yd/2/8nf9v/Q6Pn/b4HN/z9T
        uv8tQK7/obTj/9Lo+v+ozvD/P5Xa/9Pm9//K3/X/yN72/8nf9v/J3/b/y+D2/8De9f8rhtP/z+X4/83k
        +v+ywc3/YVdV/36Jl//Z7f//crbo/zSV5v9mter/yd/1/8nf9f/J3/X/yd/1/8nf9f/J3/b/yN72/9Dk
        9//K3/f/HS+w/0RVvP/c8f7/zuL3/6fQ8P8+ldr/0uX4/8rf9f/I3/b/yN/2/8jf9v/L4Pb/v971/yqG
        1P/O5fj/y+P6/7HBz/+Joan/er/g/6ra9P93uen/NJTl/2W16v/J3/X/yd/1/8nf9f/J3/X/yd/1/8jf
        9v/K4Pb/yuH2/zlOtf9sgMv/QFO6/2l+yP/X6vv/ptDw/z6V2v/S5fj/yd/2/8je9f/I3vX/yN/1/8rg
        9f+/3fX/KobU/83l+f/I4Pb/weH1/7Hk+/+W1fX/dsXu/2i27f82k+X/ZLXp/8nf9f/J3/X/yd/1/8nf
        9f/J3/X/yN72/8vh9/+4zOv/Ul+4/9fs/P/C1PH/SFqy/9Xq/P+nz+//P5Xa/9Pl9//M3vb/yt/0/8rf
        9f/K3vX/zOD1/8Hd9f8rhdP/zuT4/8rf9f/B3/b/rdv4/6zh/P9zx93/VK+e/zua3f9ltOr/yd/1/8nf
        9f/J3/X/yd/1/8nf9f/K3vb/y+D0/9Ll9//Y6vr/0OP3/9Hm+P/X6vr/1eb3/6vT8f9Bl9r/2Or4/9Hj
        9f/Q4vf/0OL3/9Di9//T4/f/x+D3/yyH1P/V5/n/0eL3/8vj+v+k4un/itq5/1Cwcv9BoFf/Pp26/2Sz
        7f/J3/X/yd/1/8nf9f/J3/X/yd/1/8vf9v/A3fX/jL/q/5DB6/+Owuv/j8Lr/4/A6/+Rwuz/eLjo/zyQ
        2/+Vx+z/kcLr/5DD6/+Qw+v/kMHr/5LC6/+Kwev/LIfX/5HF7f+Rwez/jsPj/2bKiP9q0of/Y8eC/0ek
        Yv9AoIX/ZrXx/8nf9f/J3/X/yd/1/8nf9f/J3/X/y+D2/7bW8P84kNf/P5Td/z2V3P8+ltz/PpPc/0CU
        3P89k9z/Lorc/0GW2/89ldv/QJPb/0CT2/9Ak9z/QZXc/z+W2v8qitz/QJXc/0CV2/89k9v/ZsWZ/2zU
        iv9v1I//Sado/z2fZ/9pueL/yd/1/8nf9f/J3/X/yd/1/8nf9f/J3/b/y+D2/83k+P/N5vv/0ef7/9Hn
        +//Q5Pj/1OX3/6fT8f9Dl9v/2er6/9Hp+f/R5Pj/z+P3/9Ln+P/U5/j/xeD3/y2H0//V6Pr/0eT4/8/i
        /v+q3cz/ZNGG/2/Uj/9Vtnb/P6Je/2m5vP/J3/X/yd/1/8nf9f/J3/X/yd/1/8nf9v/I3/b/zuL6/87T
        0f/Js5D/zruf/9Dg7f/R4fj/pM7w/z+V2f/Z6fv/nbPf/8Tc9P/R6vv/rcLo/7jO7v/C3/b/KobV/8zm
        +f/H4fX/zN73/8fk8P9ozYj/bdaN/2bIhf8/oWL/ZbeK/8nf9f/J3/X/yd/1/8nf9f/J3/X/yN/2/8jg
        +f/Q1+H/y6Vy/9TNwv/Vup7/zLOO/9Xk/v+j0O//QZXZ/97v/P9YbcH/RVm1/8jZ9f8WKqX/obfi/8Tj
        9/8qhtX/z+X4/8ng9v/J3vb/0OH9/4fUpP9o04n/cNaQ/0aoa/8+o2L/+/37/8nf9f/J3/X/yd/1/8nf
        9f/J3/b/yOL9/86+q//Ow7P/x+X//9Pp///IqHz/1N/n/6TQ8v9BlNn/1+f4/9Pn+f9EWLv/JDGx/3yP
        1P/Y7Pz/wdz0/yuG1v/Q5ff/yt/2/8jf9v/M3/r/r9vT/2PQhf9v1I//Wbp6/zmeXf+23MP/yd/1/8nf
        9f/J3/X/yd/1/8nf9v/I4v7/0MCp/8/Ht//I5P//0ef9/8qoff/S3uT/ptLy/z+V2P/S5/j/1uv9/01g
        wf8XK67/ip3Y/9ft/P+/3vb/LIXV/8/l+P/J3/b/yd72/8ne9//O5ff/bMuJ/2vUjP9pzYn/P6Fi/2a4
        g//J3/X/yd/1/8nf9f/J3/X/yd/2/8fg+f/N19r/yKV5/9HPzP/SwKv/zK6J/8/o/P+kz+//QJTa/9/u
        +/9mdsb/Pk60/7nP7v8ZKKP/q7/l/8Li+P8qhNX/zuX3/8rf9v/J3vb/yN72/9Dg/v+P167/Z9KI/3DW
        kP9Lq2z/OKFe//b7+P/J3/X/yd/1/8nf9f/I3/b/yd/2/87h+//Rz8n/zq6F/862lv/Q3+3/zeL5/6XQ
        7/8+ltn/2ev6/5io2//G1/T/1Or7/6e54/+0yen/weL1/yyF1P/P5fj/y9/1/8nf9P/J4PT/zd/5/7fe
        3f9jzoT/bdSO/1u+fP84n1//p9a3/8nf9f/J3/X/yd/1/8je9v/L4Pf/zeP3/8/n/P/S6fr/0+n8/8/l
        +v/U5vj/qdTx/0KW2v/Z6/n/1ej6/9Hl+P/R5fj/0ej5/9To+f/G4vb/LIjU/9Xo+v/R5fb/z+T3/9Dk
        +P/R4/n/0+n6/3jSk/9s1Iv/as6K/0ChZP9YsXf/yd/1/8nf9f/J3/X/zOD1/7rY8P9Dldn/Rpvd/0eb
        3v9LnN3/SZvd/0mc3f9DmN//MIrd/0uc3f9Jm9z/SJrc/0ma3f9Hm9v/SJvd/0ub3v8rid7/Sp7d/0mc
        2/9Hmd3/SZvc/0mb3v9KmuP/VrWp/2zViP9x1pD/TK9w/zegXv/i8uj/yd/1/8nf9f/L3/X/vt30/3i0
        5P99teb/f7fo/3626P97teX/frfm/2uw4/83kNv/grrn/3625f9+tub/fbXl/3625f9+tuX/eLfl/yuG
        2/+AueX/f7fk/3u25v99uen/frjo/4K46v9arMz/a9KG/3DVj/9dxIH/PaBf/5jOqv/J3/X/yd/1/8re
        9v/L4fb/z+P5/9Lo/P/S3uP/0+Lq/8/n+//T5/n/qtPx/0CX2v/a6vr/0OT3/8/j9//Q4/f/z+T3/9Ll
        +P/F4vb/LIbW/9Lq+v/M5vv/0ub1/9Tb4f/T5vf/2er7/3S26v9bwpX/b9SL/2vTjf9Eo2X/Tapu/8nf
        9f/J3/X/yd/1/8ff9//O4/j/zL6m/8unev/Kpnn/1M/I/8/k/P+lzu//P5Xa/9Pl+P/J3/X/yd/1/8nf
        9f/I3vb/yt/2/8De9f8rhtX/zeX7/8/f6f/NrYL/zKZ9/86th//X4+3/cLPx/0uvtP9v1of/cNWQ/1Cw
        cv83n1v/2ezg/8nf9f/I3/b/yOD6/83S0f/NqYL/0+Hp/9DX2P/KpXn/0+Xx/6TQ8f8/lNj/0+X4/8nf
        9f/I3/X/yN/1/8fe9v/K3/b/wd71/yqH1P/N6///z7WW/9HErv/R4/L/z7+n/9i/n/9xufP/QJ7V/2vR
        if9q1Y7/ZcWE/zygYP+CxZv/yd/1/8nf9v/H4v3/zsGu/9HFtP/H5P//zuj//8uvi//V19j/pdDz/0GU
        2v/U5ff/y9/1/8ve9v/K3vb/yd/1/8zf9v/C3vX/K4XW/9Ts///Kpn3/1uHs/8fh/v/O3ur/1bCB/3S5
        8/84luj/YMWa/2vViv9v04//Radn/0aqZv/J3/X/yd/2/8jh+//NysH/z7WU/87n///R4vT/yaZ6/8/e
        6P+m0PL/QZXa/9Ll9//I3/T/yN72/8jf9f/I3vb/yuD1/7/d9f8phtX/0ev//8utiP/W083/y+j//9PO
        xP/Wto7/dbrx/zeV7P9TsLv/a9iH/3HZjf9XtnH/K35y/8bX6v/J3/b/yN/3/83j9P/KrIT/0rKN/8yq
        gv/NvKb/zuf9/6fP8P9AlNr/0+b3/8ng9P/K3/f/yN71/8rf9//L3/b/v931/yuF1P/L5v3/0tbQ/8ul
        eP/QtZT/x6d5/9fb1/9yuO3/NZXn/2635P942oz/WcKZ/zmOvP8XSdD/eJjo/8je9v/I3vb/yOD4/9Dg
        7//KyL7/zs7H/8/i+f/M4ff/ps3u/zqT2f/S5ff/yd/0/8je9v/I3/X/yN71/8vf9v+93fX/JIPU/87j
        +f/N5Pr/ztjb/8vFuf/S2t3/1eb9/3S16f80lOb/d7zt/4fD0v8khdn/Lozl/xtR0/9lieP/yN71/8ne
        9f/J3vb/yN/3/8vh+//K4fv/yOD1/8nf9v+22PL/bq7f/87j9v/I3/T/yN71/8je9f/I3vX/y9/1/8jg
        9/9hpNr/zOP4/8ng9f/H4fj/yeL7/8jg+f/V4/f/c7Xp/zOV5f9tte7/3er8/xd93P8rieD/C0bN/6W7
        7//V6Pf/xtz1/8bf9f/G3/X/yN71/8je9f/I3vX/yN71/8rf9v/M4vj/yN70/8fe9P/H3vT/x970/8fe
        9f/H3vX/yN71/87k+P/H3vX/x970/8Xe9P/G3vT/yd72/87l9/9TpOT/KJHh/6LP8//J3/X/yd/1/0mR
        4/98muj/yd/1//z9/v/a6vj/0OX3/9Lm+P/S5ff/0uX3/9Ll9//S5ff/0uX3/9Ll+P/S5fb/0uX2/9Ll
        9v/S5fb/0uX4/9Ll9//S5ff/0uX4/9Ll9v/S5fb/0eX2/9Hl9v/R5fj/jsPq/1Wl5/+Qx+//yd/1/8nf
        9f/J3/X/yd/1/8nf9f/J3/X/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>